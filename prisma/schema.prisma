generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        String   @id @default(uuid())
  nome      String   @unique
  senha     String
  permissao String
  updatedAt DateTime @updatedAt
}

model Reserva {
  id                  String   @id @default(uuid())
  nome                String
  documento           String
  telefone            String
  email               String?
  dataEntrada         DateTime
  dataSaida           DateTime
  numeroPessoas       Int
  chale               String
  status              String
  valor               Float
  observacoes         String?
  desconto            Float    @default(0)
  valorPagoAntecipado Float    @default(0)
  criancas0a3         Int      @default(0)
  criancas4a9         Int      @default(0)
}

model Despesa {
  id        String   @id @default(uuid())
  nome      String
  valor     Float
  categoria String
  data      DateTime
  updatedAt DateTime @updatedAt
}

model CheckIn {
  id                    Int       @id @default(autoincrement())
  nome                  String
  dataNascimento        String?
  sexo                  String?
  telefone              String?
  email                 String?
  nacionalidade         String?
  documento             String?
  endereco              String?
  bairro                String?
  numero                String?
  cidade                String?
  estado                String?
  cep                   String?
  acompanhantes         Json?
  entrada               DateTime
  saida                 DateTime
  chale                 String
  valor                 Float
  valorEntrada          String?
  adultos               String?
  criancas0a3           String?
  criancas4a9           String?
  descontoPersonalizado String?
  observacoes           String?
  updatedAt             DateTime   @updatedAt

  consumos   Consumo[]   @relation("CheckInToConsumo")
  checkOut   CheckOut?   @relation("CheckInCheckOut")
}

model Consumo {
  id           String    @id @default(uuid())
  cliente      String
  hospede      Boolean
  checkinId    Int?
  status       String
  criadoEm     DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  subcomandas  Json

  checkin      CheckIn?  @relation("CheckInToConsumo", fields: [checkinId], references: [id], onDelete: Cascade)
}

model CheckOut {
  id            String   @id @default(uuid())
  checkinId     Int      @unique
  dataSaidaReal DateTime
  formaPagamento String
  total         Float

  checkin       CheckIn  @relation("CheckInCheckOut", fields: [checkinId], references: [id], onDelete: Cascade)
}

model PrecosConfig {
  id              Int     @id @default(1)
  hospedagem      Json
  categoriasExtras Json
}
